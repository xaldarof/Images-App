// Generated by Dagger (https://dagger.dev).
package com.example.data.di;

import com.example.data.cloud.abstraction.ImageDataSource;
import com.example.data.cloud.api.ImageApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CloudModule_ProvideImageDataSourceFactory implements Factory<ImageDataSource> {
  private final Provider<ImageApiService> serviceProvider;

  public CloudModule_ProvideImageDataSourceFactory(Provider<ImageApiService> serviceProvider) {
    this.serviceProvider = serviceProvider;
  }

  @Override
  public ImageDataSource get() {
    return provideImageDataSource(serviceProvider.get());
  }

  public static CloudModule_ProvideImageDataSourceFactory create(
      Provider<ImageApiService> serviceProvider) {
    return new CloudModule_ProvideImageDataSourceFactory(serviceProvider);
  }

  public static ImageDataSource provideImageDataSource(ImageApiService service) {
    return Preconditions.checkNotNullFromProvides(CloudModule.INSTANCE.provideImageDataSource(service));
  }
}
