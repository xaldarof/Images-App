// Generated by Dagger (https://dagger.dev).
package com.example.data.realization;

import com.example.data.cloud.abstraction.ImageDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataRepositoryImpl_Factory implements Factory<DataRepositoryImpl> {
  private final Provider<ImageDataSource> imageDataSourceProvider;

  public DataRepositoryImpl_Factory(Provider<ImageDataSource> imageDataSourceProvider) {
    this.imageDataSourceProvider = imageDataSourceProvider;
  }

  @Override
  public DataRepositoryImpl get() {
    return newInstance(imageDataSourceProvider.get());
  }

  public static DataRepositoryImpl_Factory create(
      Provider<ImageDataSource> imageDataSourceProvider) {
    return new DataRepositoryImpl_Factory(imageDataSourceProvider);
  }

  public static DataRepositoryImpl newInstance(ImageDataSource imageDataSource) {
    return new DataRepositoryImpl(imageDataSource);
  }
}
