// Generated by Dagger (https://dagger.dev).
package com.example.data.cloud.api;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImagePagingSource_Factory implements Factory<ImagePagingSource> {
  private final Provider<ImageApiService> imageApiServiceProvider;

  private final Provider<String> queryProvider;

  public ImagePagingSource_Factory(Provider<ImageApiService> imageApiServiceProvider,
      Provider<String> queryProvider) {
    this.imageApiServiceProvider = imageApiServiceProvider;
    this.queryProvider = queryProvider;
  }

  @Override
  public ImagePagingSource get() {
    return newInstance(imageApiServiceProvider.get(), queryProvider.get());
  }

  public static ImagePagingSource_Factory create(Provider<ImageApiService> imageApiServiceProvider,
      Provider<String> queryProvider) {
    return new ImagePagingSource_Factory(imageApiServiceProvider, queryProvider);
  }

  public static ImagePagingSource newInstance(ImageApiService imageApiService, String query) {
    return new ImagePagingSource(imageApiService, query);
  }
}
