// Generated by Dagger (https://dagger.dev).
package com.example.data.di;

import com.example.data.cloud.api.ImageApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CloudModule_ProvideImageServiceFactory implements Factory<ImageApiService> {
  private final Provider<Retrofit> retrofitProvider;

  public CloudModule_ProvideImageServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public ImageApiService get() {
    return provideImageService(retrofitProvider.get());
  }

  public static CloudModule_ProvideImageServiceFactory create(Provider<Retrofit> retrofitProvider) {
    return new CloudModule_ProvideImageServiceFactory(retrofitProvider);
  }

  public static ImageApiService provideImageService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(CloudModule.INSTANCE.provideImageService(retrofit));
  }
}
