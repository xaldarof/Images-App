// Generated by Dagger (https://dagger.dev).
package com.example.data.realization;

import com.example.data.cache.ImageDao;
import com.example.data.cloud.api.ImageApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImageDataSourceImpl_Factory implements Factory<ImageDataSourceImpl> {
  private final Provider<ImageApiService> apiServiceProvider;

  private final Provider<ImageDao> daoProvider;

  public ImageDataSourceImpl_Factory(Provider<ImageApiService> apiServiceProvider,
      Provider<ImageDao> daoProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.daoProvider = daoProvider;
  }

  @Override
  public ImageDataSourceImpl get() {
    return newInstance(apiServiceProvider.get(), daoProvider.get());
  }

  public static ImageDataSourceImpl_Factory create(Provider<ImageApiService> apiServiceProvider,
      Provider<ImageDao> daoProvider) {
    return new ImageDataSourceImpl_Factory(apiServiceProvider, daoProvider);
  }

  public static ImageDataSourceImpl newInstance(ImageApiService apiService, ImageDao dao) {
    return new ImageDataSourceImpl(apiService, dao);
  }
}
